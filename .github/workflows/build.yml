name: Build and deploy

env:
  # Change to whatever AWS region you want your deployments in
  AWS_REGION: eu-north-1

permissions:
  contents: read # Required for actions/checkout
  packages: write

on: push

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      FULL_IMAGE: ghcr.io/${{ github.repository }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.FULL_IMAGE }}:${{ github.sha }}, ${{ env.FULL_IMAGE }}:latest
          cache-from: type=gha,scope=${{ github.ref }}-image
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-image

      - name: Run server unit tests
        uses: docker/build-push-action@v4
        with:
          context: .
          target: server-tests
          cache-from: type=gha,scope=${{ github.ref }}-server-tests
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-server-tests

      - name: Run client unit tests
        uses: docker/build-push-action@v4
        with:
          context: .
          target: client-tests
          cache-from: type=gha,scope=${{ github.ref }}-client-tests
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-client-tests

      - name: Run integration tests
        run: |
          pip install -r test/integration/requirements.txt
          docker compose up -d
          pytest
          docker compose down

      - name: Push Docker image
        # if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.FULL_IMAGE }}:${{ github.sha }}, ${{ env.FULL_IMAGE }}:latest

      - name: CloudFormation deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        id: cloudformation-deploy
        with:
          name: ServertechChatStack
          template: tools/aws-stack.yml
          parameter-overrides: "CppserverImage=${{ env.FULL_IMAGE }}:${{ github.sha }},KeyName=${{ secrets.SSH_KEY_NAME }}"
          no-fail-on-empty-changeset: "1"

      - name: Print the URL of the listening server
        run: echo "Server listening at http://${{ steps.cloudformation-deploy.outputs.WebServerIp }}/"
